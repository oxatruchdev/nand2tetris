// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Check the address we are going to read/write
    DMux8Way(in=load, sel=address, a=dA, b=dB, c=dC, d=dD, e=dE, f=dF, g=dG, h=dH);

    // Do operation to the registers
    // It will write or keep the value in the register
    Register(in=in, load=dA, out=outA);
    Register(in=in, load=dB, out=outB);
    Register(in=in, load=dC, out=outC);
    Register(in=in, load=dD, out=outD);
    Register(in=in, load=dE, out=outE);
    Register(in=in, load=dF, out=outF);
    Register(in=in, load=dG, out=outG); 
    Register(in=in, load=dH, out=outH);

    // Select the value of the address after it's been processed
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address, out=out); 
}